apiVersion: v1
kind: ServiceAccount
metadata:
  name: ml-inference-service
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ml-inference-service
  namespace: default
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ml-inference-service
  namespace: default
subjects:
- kind: ServiceAccount
  name: ml-inference-service
  namespace: default
roleRef:
  kind: Role
  name: ml-inference-service
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-inference
  namespace: default
  labels:
    app: ml-inference
    component: ml-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ml-inference
  template:
    metadata:
      labels:
        app: ml-inference
        component: ml-service
    spec:
      serviceAccountName: ml-inference-service
      containers:
      - name: ml-service
        image: ml-inference:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: MODEL_PATH
          value: "/models"
        - name: LOG_LEVEL
          value: "info"
        - name: MAX_BATCH_SIZE
          value: "4"
        - name: MAX_QUEUE_SIZE
          value: "10"
        volumeMounts:
        - name: models-volume
          mountPath: /models
        - name: cache-volume
          mountPath: /cache
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
            ephemeral-storage: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
            ephemeral-storage: 5Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: ml-models-pvc
      - name: cache-volume
        emptyDir: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-models-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: ml-inference
  namespace: default
spec:
  selector:
    app: ml-inference
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-models-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard 