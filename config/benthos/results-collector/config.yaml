input:
  amqp_0_9:
    url: ${RABBITMQ_URL:amqp://guest:guest@localhost:5672/}
    queue: inference_results
    consumer_tag: results_collector
    prefetch_count: 1
    prefetch_size: 0

pipeline:
  processors:
    # Log that result is being collected
    - processor: log_result_collected
    
    # Store result in PostgreSQL
    - processor: sql_store_result
    
    # Prepare response for client
    - bloblang: |
        root = {
          "requestId": this.requestId,
          "status": "completed",
          "result": this.result,
          "actualTokens": this.actualTokens
        }

output:
  switch:
    cases:
      - check: true
        output:
          http_client:
            url: ${CALLBACK_URL:http://localhost:3000/api/callback}
            verb: POST
            headers:
              Content-Type: application/json
            timeout: 5s

metrics: ${metrics_config}
logger: ${logger_config}

resources:
  - label: sql_store_result
    path: /benthos/common/sql.yaml
  - label: log_result_collected
    path: /benthos/common/observability.yaml
  - label: metrics_config
    path: /benthos/common/observability.yaml
  - label: logger_config
    path: /benthos/common/observability.yaml 