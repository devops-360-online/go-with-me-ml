apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: benthos-ml-worker-scaler
  namespace: default
spec:
  scaleTargetRef:
    name: benthos-ml-worker
  minReplicaCount: 1
  maxReplicaCount: 10
  pollingInterval: 15
  cooldownPeriod: 30
  triggers:
    - type: rabbitmq
      metadata:
        queueName: ml_inference_requests
        mode: QueueLength
        value: "5"
        protocol: amqp
        host: rabbitmq.default.svc:5672
        queueLength: "10"
      authenticationRef:
        name: rabbitmq-auth
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: rabbitmq-auth
spec:
  secretTargetRef:
    - parameter: username
      name: rabbitmq-credentials
      key: username
    - parameter: password
      name: rabbitmq-credentials
      key: password
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: ml-worker-token-scaler
  namespace: default
spec:
  scaleTargetRef:
    name: benthos-ml-worker
  minReplicaCount: 1
  maxReplicaCount: 10
  pollingInterval: 15
  cooldownPeriod: 30
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://prometheus-server.monitoring.svc.cluster.local
        metricName: ml_tokens_processed_rate
        query: sum(rate(ml_tokens_processed_total{type="prompt"}[5m])) * 60
        threshold: "5000"
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: ml-service-scaler
  namespace: default
spec:
  scaleTargetRef:
    name: ml-inference
  minReplicaCount: 1
  maxReplicaCount: 5
  pollingInterval: 15
  cooldownPeriod: 30
  triggers:
    - type: cpu
      metadata:
        type: Utilization
        value: "70" 