input:
  type: http_server
  http_server:
    address: ":8080"
    path: /api/gateway
    allowed_methods: ["POST"]
    timeout: "10s"
    # Uncomment and configure TLS settings if needed:
    # tls:
    #   enabled: true
    #   cert_file: "/path/to/cert.pem"
    #   key_file: "/path/to/key.pem"

pipeline:
  processors:
    # Processor for validating and transforming the incoming request
    - bloblang: |
        # Ensure the incoming request has a 'prompt' field
        root.prompt = if exists(this.prompt) {
          this.prompt
        } else {
          fail("Missing prompt field")
        }
        # Extract user information for quota management from 'user' object if provided (optional)
        root.user_id = if exists(this.user.id) { this.user.id } else { "anonymous" }
        # Generate a unique request ID using Benthos's built-in uuid function:
        root.request_id = "req_" + uuidv4()
        # Estimate token usage by, for instance, counting words (this is a simple approximation)
        # You might replace this with a proper tokenization algorithm as needed
        root.token_estimate = this.prompt.split(" ").length()

    # Log the transformed request for debugging/auditing
    - log:
        level: INFO
        message: "Transformed request: ${! json() }"

output:
  type: amqp
  amqp:
    url: "amqp://prod_user:StrongProdPassw0rd!@rabbitmq.queue.svc.cluster.local:5672/"
    target: "inference_requests"
    publish_mode: "persistent"
